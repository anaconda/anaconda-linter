# Apply to all files without commiting:
#   pre-commit run --all-files
# Update this file:
#   pre-commit autoupdate
# This prevents `pre-commit` from using a newer version of Python, which may cause `pylint` to emit extra errors.
default_language_version:
    python: python3.11
exclude: |
  (?x)^(
    tests/test_aux_files/.*|
    docs/.*|
    setup.py|
  )$
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-added-large-files
        exclude_types: ["json", "yaml"]
      - id: check-ast
      - id: fix-byte-order-marker
      - id: check-case-conflict
      - id: check-executables-have-shebangs
      - id: check-merge-conflict
      - id: check-shebang-scripts-are-executable
      - id: check-yaml
        exclude: (anaconda_linter/data/conda_build_config.yaml|tests/bad-feedstock/recipe/meta.yaml|tests/good-feedstock/recipe/meta.yaml|recipe/meta.yaml)
      - id: debug-statements
      - id: detect-private-key
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace
  # Notes:
  # - By default, `black` uses a line-length of 88.
  # - `isort` will conflict with `black`, if not properly configured
  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ["--profile", "black", --line-length=120]
  - repo: https://github.com/psf/black
    rev: 24.10.0
    hooks:
    - id: black
      args: [--line-length=120]
  - repo: https://github.com/PyCQA/pylint
    rev: v3.3.7
    hooks:
    - id: pylint
      args: ["--rcfile=.pylintrc"]
  #- repo: https://github.com/pre-commit/mirrors-mypy
  #  rev: v1.6.1
  #  hooks:
  #  - id: mypy
  #    # `mypy` is run as a system script to ensure that it is checking against
  #    # the libraries we have installed to the environment.
  #    language: system
  #    args: [--config-file=.mypy.ini, "--cache-dir=/dev/null"]
  - repo: https://github.com/lovesegfault/beautysh
    rev: v6.2.1
    hooks:
      - id: beautysh
  - repo: https://github.com/python-jsonschema/check-jsonschema
    rev: 0.31.0
    hooks:
      - id: check-github-actions
      - id: check-github-workflows
      - id: check-renovate
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args: [--write]
  - repo: local
    hooks:
      # Run shellcheck without needing `docker` to run
      - id: shellcheck
        name: shellcheck
        description: Test shell scripts with shellcheck
        entry: shellcheck
        language: python
        types: [shell]
        require_serial: true # shellcheck can detect sourcing this way
      # Run tests through `make` to be consistent with manually run commands.
      - id: pytest
        language: system
        name: pytest
        always_run: true
        pass_filenames: false
        entry: make test
      - id: pytest-cov
        language: system
        name: pytest-cov
        always_run: true
        pass_filenames: false
        entry: make test-cov
